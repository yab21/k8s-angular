on: [push]

jobs:
  my_job:
    name: deploy to staging
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
        
      - name: Login to Docker wso Hub
        uses: docker/login-action@master
        with:
          registry: docker.wso2.com
          username: alfred.ado@smile.fr
          password: ADOalfred07@
          
      - name: Log in to the Container registry
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup ENV
        id: set-env
        run: |
          export ENV=development
          export APP_NAME=`echo ${GITHUB_REPOSITORY#*/} | tr '[:upper:]' '[:lower:]'`
          export APP_NAME="${APP_NAME//_/-}"

          touch .env.${ENV}
          cat .env.${ENV} | tee -a .env 
          
          export IMAGE_NAME=`echo ghcr.io/${GITHUB_REPOSITORY_OWNER}/${APP_NAME} | tr '[:upper:]' '[:lower:]'`
          echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
          echo "ENV=${ENV}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "ENDPOINT_ID=${ENDPOINT_ID}" >> $GITHUB_ENV
          echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV

          
          export CNT_NAME="${ENV}-${APP_NAME}"
          echo "CNT_NAME=${CNT_NAME}" >> $GITHUB_ENV
          echo "::set-output name=app_name::${APP_NAME}"
          echo "::set-output name=image_name::${IMAGE_NAME}"
          echo "::set-output name=tag::${GITHUB_REF_NAME}"
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.TAG }},${{ env.IMAGE_NAME }}:${{ env.ENV }},${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            ENV=${{ env.ENV }}
